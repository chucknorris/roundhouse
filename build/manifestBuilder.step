<?xml version="1.0" encoding="utf-8" ?>
<project name="ManifestBuilder" default="go">
	<!-- Project UppercuT - http://projectuppercut.org -->
	<!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
	<property name="build.config.settings" value="__NONE__" overwrite="false" />
	<include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
	<property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
	<property name="file.current.no_extension" value="manifestBuilder" />
	<property name="dirs.current" value="${directory::get-current-directory()}" />
	<property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />  
	<property name="path_to_solution" value="." overwrite="false" />

	<property name="msbuild.platform" value="x86" overwrite="false" />
	<property name="version.build" value="0" overwrite="false" />
	<property name="version.revision" value="0" overwrite="false" />
	<property name="version.patch" value="0" overwrite="false" />
	<property name="version.file" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
	<property name="version.file" value="${version.major}.${version.minor}.${version.patch}.${version.build}" if="${version.use_semanticversioning}" />
	<property name="framework.multitargeting" value="false" />
	<property name="framework.multitargeting.delimiter" value="," />
	<property name="is.replaced" value="false" />
	<property name="fail.build.on.error" value="true" />
	<property name="dirs.source" value="${dirs.current}${path.separator}${path_to_solution}${path.separator}" />

	<target name="go" depends="load_uppercut_assemblies, run_tasks" />

	<property name="file.uppercut.assembly" value="uppercut.tasks.dll" />
	<property name="path.uppercut.assembly" value="${dirs.current.file}${path.separator}${file.uppercut.assembly}" />
	<target name="load_uppercut_assemblies">
		<loadtasks assembly="${path.uppercut.assembly}" if="${file::exists(path.uppercut.assembly)}" />
	</target>

	<target name="run_tasks">
		<echo level="Warning" message="" />
		<echo level="Warning" message="====================" />
		<echo level="Warning" message="${project::get-name()}" />
		<echo level="Warning" message="====================" />
		<call target="prepare" if="${target::exists('prepare')}" />
		<call target="check_for_multitargeting" if="${target::exists('check_for_multitargeting')}" />
		<customExtension extends="${project::get-buildfile-path()}" type="pre" failonerror="${fail.build.on.error}" />
		<customExtension extends="${project::get-buildfile-path()}" type="replace" failonerror="${fail.build.on.error}" />
		<call target="run_normal_tasks" if="${not is.replaced}" />
		<customExtension extends="${project::get-buildfile-path()}" type="post" failonerror="${fail.build.on.error}" />
	</target>

	<target	name="run_normal_tasks"
			depends="apply_manifest"
			description="Updating application manifest." />
		  
	<target name="apply_manifest">
		<echo message="Scanning ${path::get-full-path(dirs.source)} for App.manifest" />
		<foreach item="File" property="filename">
			<in>
				<items>
					<include name="${dirs.source}${path.separator}**${path.separator}App.manifest" />
				</items>
			</in>
			<do>
				<echo message="Updating ${filename}" />
				<xmlpoke file="${filename}"
					xpath="/asmv1:assembly/asmv1:assemblyIdentity/@processorArchitecture"
					value="${msbuild.platform}">
					<namespaces>
						<namespace prefix="asmv1" uri="urn:schemas-microsoft-com:asm.v1" />
					</namespaces>
				</xmlpoke>
				<xmlpoke file="${filename}"
					xpath="/asmv1:assembly/asmv1:assemblyIdentity/@version"
					value="${version.file}">
					<namespaces>
						<namespace prefix="asmv1" uri="urn:schemas-microsoft-com:asm.v1" />
					</namespaces>
				</xmlpoke>
			</do>
		</foreach>
	</target>

</project>