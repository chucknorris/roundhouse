<?xml version="1.0" encoding="utf-8" ?>
<project name="CoverageRunner" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="file.current.no_extension" value="cover" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="path.to.toplevel" value="..${path.separator}.." />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts_custom}${path.separator}analyzers" />
  <property name="folder.code_build" value="build_output" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_build}" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="dirs.build.code" value="${dirs.build}${path.separator}${folder.app.drop}" overwrite="false" />
  <property name="cover.framework" value="opencover" overwrite="false" />
  <property name="is.replaced" value="false" />
  <property name="fail.build.on.error" value="true" />
  <property name="app.ruby" value="C:\Ruby\bin\ruby.exe" overwrite="false" />
  <property name="app.powershell" value="%WINDIR%\System32\WindowsPowerShell\v1.0\powershell.exe" overwrite="false" />

    <target name="go" depends="load_uppercut_assemblies, run_tasks" />
  
  <property name="file.uppercut.assembly" value="uppercut.tasks.dll" />
  <property name="path.uppercut.assembly" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts}${path.separator}${file.uppercut.assembly}" />
  <target name="load_uppercut_assemblies">
    <loadtasks assembly="${path.uppercut.assembly}" if="${file::exists(path.uppercut.assembly)}" />
  </target>

  <target name="run_tasks">
    <echo level="Warning" message="" />
    <echo level="Warning" message="====================" />
    <echo level="Warning" message="${project::get-name()}" />
    <echo level="Warning" message="====================" />
    <call target="prepare" if="${target::exists('prepare')}" />
    <customExtension extends="${project::get-buildfile-path()}" type="pre" failonerror="${fail.build.on.error}" />
    <customExtension extends="${project::get-buildfile-path()}" type="replace" failonerror="${fail.build.on.error}" />
    <call target="run_normal_tasks" if="${not is.replaced}" />
    <customExtension extends="${project::get-buildfile-path()}" type="post" failonerror="${fail.build.on.error}" />
  </target>

  <target name="run_normal_tasks"
          depends="run_coverage"
          description="Analysing project for test coverage." />

  <target name="run_coverage">
    <nant buildfile="${dirs.current}${path.separator}ncover.cover.step" inheritall="true" if="${cover.framework=='ncover'}" />
    <nant buildfile="${dirs.current}${path.separator}opencover.cover.step" inheritall="true" if="${cover.framework=='opencover'}" />
    <call target="set_normal_failure_mode" />
  </target>

  <target name="open_results">
    <nant buildfile="${dirs.current}${path.separator}ncover.cover.step" target="open_results" inheritall="true" if="${cover.framework=='ncover'}" />
    <nant buildfile="${dirs.current}${path.separator}opencover.cover.step" target="open_results" inheritall="true" if="${cover.framework=='opencover'}" />
  </target>

  <target name="set_normal_failure_mode">
    <property name="nant.onfailure" value="fail" />
  </target>

</project>